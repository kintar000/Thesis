-- PostgreSQL database dump
-- Dumped on: 2025-08-06T15:54:41.887Z
-- Database: srph_mis
-- Generated by SRPH-MIS Database Management System

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;

-- Table: public.accessories
-- Drop table if exists
DROP TABLE IF EXISTS public.accessories CASCADE;

-- Table structure for accessories
CREATE TABLE public.accessories (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: accessories
-- No data found in table accessories

-- Table: public.activities
-- Drop table if exists
DROP TABLE IF EXISTS public.activities CASCADE;

-- Table structure for activities
CREATE TABLE public.activities (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: activities
-- 3173 rows of data
-- INSERT INTO public.activities SELECT * FROM (VALUES
-- ... 3173 data rows would be here
-- ) AS t;

-- Table: public.assets
-- Drop table if exists
DROP TABLE IF EXISTS public.assets CASCADE;

-- Table structure for assets
CREATE TABLE public.assets (
              id SERIAL PRIMARY KEY,
              asset_tag TEXT NOT NULL UNIQUE,
              name TEXT NOT NULL,
              description TEXT,
              category TEXT NOT NULL,
              status TEXT NOT NULL DEFAULT 'available',
              purchase_date TEXT,
              purchase_cost TEXT,
              location TEXT,
              serial_number TEXT,
              model TEXT,
              manufacturer TEXT,
              notes TEXT,
              knox_id TEXT,
              assigned_to INTEGER REFERENCES users(id),
              checkout_date TEXT,
              expected_checkin_date TEXT,
              finance_updated BOOLEAN DEFAULT FALSE
            );

-- Data for table: assets
-- 2673 rows of data
-- INSERT INTO public.assets SELECT * FROM (VALUES
-- ... 2673 data rows would be here
-- ) AS t;

-- Table: public.bitlocker_keys
-- Drop table if exists
DROP TABLE IF EXISTS public.bitlocker_keys CASCADE;

-- Table structure for bitlocker_keys
CREATE TABLE public.bitlocker_keys (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: bitlocker_keys
-- No data found in table bitlocker_keys

-- Table: public.components
-- Drop table if exists
DROP TABLE IF EXISTS public.components CASCADE;

-- Table structure for components
CREATE TABLE public.components (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: components
-- No data found in table components

-- Table: public.consumable_assignments
-- Drop table if exists
DROP TABLE IF EXISTS public.consumable_assignments CASCADE;

-- Table structure for consumable_assignments
CREATE TABLE public.consumable_assignments (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: consumable_assignments
-- No data found in table consumable_assignments

-- Table: public.consumables
-- Drop table if exists
DROP TABLE IF EXISTS public.consumables CASCADE;

-- Table structure for consumables
CREATE TABLE public.consumables (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: consumables
-- No data found in table consumables

-- Table: public.discovered_hosts
-- Drop table if exists
DROP TABLE IF EXISTS public.discovered_hosts CASCADE;

-- Table structure for discovered_hosts
CREATE TABLE public.discovered_hosts (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: discovered_hosts
-- No data found in table discovered_hosts

-- Table: public.it_equipment
-- Drop table if exists
DROP TABLE IF EXISTS public.it_equipment CASCADE;

-- Table structure for it_equipment
CREATE TABLE public.it_equipment (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: it_equipment
-- 5 rows of data
-- INSERT INTO public.it_equipment SELECT * FROM (VALUES
-- ... 5 data rows would be here
-- ) AS t;

-- Table: public.it_equipment_assignments
-- Drop table if exists
DROP TABLE IF EXISTS public.it_equipment_assignments CASCADE;

-- Table structure for it_equipment_assignments
CREATE TABLE public.it_equipment_assignments (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: it_equipment_assignments
-- 2 rows of data
-- INSERT INTO public.it_equipment_assignments SELECT * FROM (VALUES
-- ... 2 data rows would be here
-- ) AS t;

-- Table: public.license_assignments
-- Drop table if exists
DROP TABLE IF EXISTS public.license_assignments CASCADE;

-- Table structure for license_assignments
CREATE TABLE public.license_assignments (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: license_assignments
-- No data found in table license_assignments

-- Table: public.licenses
-- Drop table if exists
DROP TABLE IF EXISTS public.licenses CASCADE;

-- Table structure for licenses
CREATE TABLE public.licenses (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: licenses
-- No data found in table licenses

-- Table: public.settings
-- Drop table if exists
DROP TABLE IF EXISTS public.settings CASCADE;

-- Table structure for settings
CREATE TABLE public.settings (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: settings
-- 1 rows of data
-- INSERT INTO public.settings SELECT * FROM (VALUES
-- ... 1 data rows would be here
-- ) AS t;

-- Table: public.system_settings
-- Drop table if exists
DROP TABLE IF EXISTS public.system_settings CASCADE;

-- Table structure for system_settings
CREATE TABLE public.system_settings (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: system_settings
-- 1 rows of data
-- INSERT INTO public.system_settings SELECT * FROM (VALUES
-- ... 1 data rows would be here
-- ) AS t;

-- Table: public.users
-- Drop table if exists
DROP TABLE IF EXISTS public.users CASCADE;

-- Table structure for users
CREATE TABLE public.users (
              id SERIAL PRIMARY KEY,
              username TEXT UNIQUE NOT NULL,
              password TEXT NOT NULL,
              first_name TEXT NOT NULL,
              last_name TEXT NOT NULL,
              email TEXT NOT NULL,
              department TEXT,
              is_admin BOOLEAN DEFAULT FALSE,
              role_id INTEGER,
              permissions JSON DEFAULT '{"assets":{"view":true,"edit":false,"add":false}}'
            );

-- Data for table: users
-- 13 rows of data
-- INSERT INTO public.users SELECT * FROM (VALUES
-- ... 13 data rows would be here
-- ) AS t;

-- Table: public.vm_inventory
-- Drop table if exists
DROP TABLE IF EXISTS public.vm_inventory CASCADE;

-- Table structure for vm_inventory
CREATE TABLE public.vm_inventory (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: vm_inventory
-- 89 rows of data
-- INSERT INTO public.vm_inventory SELECT * FROM (VALUES
-- ... 89 data rows would be here
-- ) AS t;

-- Table: public.vm_monitoring
-- Drop table if exists
DROP TABLE IF EXISTS public.vm_monitoring CASCADE;

-- Table structure for vm_monitoring
CREATE TABLE public.vm_monitoring (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: vm_monitoring
-- No data found in table vm_monitoring

-- Table: public.vms
-- Drop table if exists
DROP TABLE IF EXISTS public.vms CASCADE;

-- Table structure for vms
CREATE TABLE public.vms (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: vms
-- No data found in table vms

-- Table: public.zabbix_settings
-- Drop table if exists
DROP TABLE IF EXISTS public.zabbix_settings CASCADE;

-- Table structure for zabbix_settings
CREATE TABLE public.zabbix_settings (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: zabbix_settings
-- No data found in table zabbix_settings

-- Table: public.zabbix_subnets
-- Drop table if exists
DROP TABLE IF EXISTS public.zabbix_subnets CASCADE;

-- Table structure for zabbix_subnets
CREATE TABLE public.zabbix_subnets (
              id SERIAL PRIMARY KEY,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

-- Data for table: zabbix_subnets
-- No data found in table zabbix_subnets

-- Constraints and indexes
ALTER TABLE ONLY public.users ADD CONSTRAINT users_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.users ADD CONSTRAINT users_username_key UNIQUE (username);
ALTER TABLE ONLY public.assets ADD CONSTRAINT assets_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.assets ADD CONSTRAINT assets_asset_tag_key UNIQUE (asset_tag);
ALTER TABLE ONLY public.assets ADD CONSTRAINT assets_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.users(id);

-- PostgreSQL database dump complete
-- Backup created: 2025-08-06T15:54:41.887Z
-- Total tables backed up: 20